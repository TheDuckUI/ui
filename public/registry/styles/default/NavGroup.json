{
  "name": "NavGroup",
  "dependencies": [
    "Button",
    "Badge"
  ],
  "files": [
    {
      "name": "NavGroup.tsx",
      "content": "'use client'\nimport * as React from 'react'\nimport { cn } from '@/lib'\nimport { Button, ButtonProps } from './Button'\nimport { filteredObject, generateHeaderArrays } from '@/lib/utils'\nimport { Separator } from './ShadcnUI'\n\nexport type NavGroupProps<T extends boolean> = {\n  navigationKeys: ButtonProps[]\n  nav: NavType<T>\n}\n\nexport type NavType<T extends boolean> = NavCollabsableType<T> & {\n  group: number[]\n  router: any //AppRouterInstance\n  pathname: string\n  className?: string\n}\n\nexport type NavCollabsableType<K> = K extends true ? NavCollabsedType : NavNotCollabsedType\n\nexport interface NavCollabsedType {\n  isCollabsed?: boolean\n}\nexport interface NavNotCollabsedType {}\n\nexport const NavGroup = <T extends boolean>({ navigationKeys, nav }: NavGroupProps<T>) => {\n  const grouped = generateHeaderArrays<ButtonProps>(nav.group, navigationKeys)\n  const navIsCollabsed = (nav as NavCollabsedType).isCollabsed\n  const filteredKeys = filteredObject(['group', 'router', 'location', 'isCollabsed'], nav)\n\n  const variants = {\n    default: 'grid items-center',\n  }\n\n  return (\n    <div\n      className={cn('w-fit h-full', nav.className)}\n      {...filteredKeys}\n    >\n      {\n        <div className={variants.default}>\n          {grouped.map((keyGroup, idx) => (\n            <React.Fragment key={idx}>\n              <ul className={cn(variants.default, 'px-2 py-1')}>\n                {keyGroup.map((key, idx) => {\n                  const { className, isCollapsed, onClick, variant, children, icon, ...props } = key\n                  return (\n                    <>\n                      <li\n                        key={idx}\n                        className=\"w-full\"\n                      >\n                        <Button\n                          key={idx}\n                          icon={key.icon}\n                          variant={variant || 'ghost'}\n                          isCollapsed={navIsCollabsed ? navIsCollabsed : false}\n                          className={cn(\n                            'w-full justify-between',\n                            nav.pathname === key.route &&\n                              'bg-primary text-white hover:bg-primary/90 hover:text-white h-10',\n                            key.className\n                          )}\n                          onClick={() => console.log('hi')}\n                          {...props}\n                        >\n                          {children}\n                        </Button>\n                      </li>\n                    </>\n                  )\n                })}\n                {idx !== grouped.length - 1 && <Separator className=\"my-1\" />}\n              </ul>\n            </React.Fragment>\n          ))}\n        </div>\n      }\n    </div>\n  )\n}\n"
    }
  ],
  "type": "components:ui"
}